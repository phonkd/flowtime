version: '3.8'

# Self-contained Docker Compose for Hypnosis App
# This can be used as a standalone file without the rest of the repository
# Just place it in a directory and run: docker-compose -f docker-compose.standalone.yml up -d

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: hypnosis-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - hypnosis_init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: hypnosis
      POSTGRES_PASSWORD: hypnosis_password
      POSTGRES_DB: hypnosis_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hypnosis"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Improved PostgreSQL performance settings
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c listen_addresses='*'
      -c log_connections=on
      -c log_disconnections=on

  # Node.js Application with Hypnosis App
  app:
    # Using pre-built image from the GitHub Container Registry
    # This image contains all the application code and scripts
    image: ghcr.io/your-username/hypnosis-app:latest
    container_name: hypnosis-app
    restart: unless-stopped
    volumes:
      - hypnosis_uploads:/app/uploads
      - hypnosis_init:/init
    environment:
      # Database settings
      NODE_ENV: production
      USE_DATABASE: "true"
      POSTGRES_USER: hypnosis
      POSTGRES_PASSWORD: hypnosis_password
      POSTGRES_DB: hypnosis_db
      POSTGRES_HOST: postgres
      DATABASE_URL: postgresql://hypnosis:hypnosis_password@postgres:5432/hypnosis_db
      SESSION_SECRET: hypnosis-app-secret-key-production
    ports:
      - "5000:5000"
    # Prepare the init scripts and then start the application
    command: >
      sh -c "cp /app/init-db.sh /init/ && chmod +x /init/init-db.sh && 
             echo 'Copied initialization scripts to shared volume' && 
             /app/wait-for-postgres.sh npm run start"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  hypnosis_uploads:
  hypnosis_init: